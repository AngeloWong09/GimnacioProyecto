@page "/EntrenadorReporte"

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bienvenido a GYM FAST FORCE!</title>
    <link rel="stylesheet" href="styles.css" />
</head>

<body>
    <!-- Título principal de la página -->
    <h1 class="title">GYM FAST FORCE</h1>

    <!-- Sección para búsqueda por ID de Entrenador -->
    <div>
        <!-- Campo para ingresar el ID del entrenador que se desea buscar -->
        <label for="searchID">Escriba su ID Entrenador:</label>
        <input type="text" id="searchID" placeholder="Ingresa el ID del Entrenador..." />
        <button onclick="filtrarPorID()">Buscar</button> <!-- Botón que invoca la función de búsqueda -->
    </div>
    <br />

    <!-- Botón para cargar y mostrar la tabla desde el archivo CSV -->
    <div>
        <button onclick="mostrarTabla()">Mostrar Tabla de Clases</button>
    </div>
    <br />

    <!-- Botón para guardar la tabla mostrada como archivo CSV -->
    <div>
        <button onclick="guardarCSV()">Guardar Repote</button>
    </div>
    <br />

    <!-- Tabla para mostrar los datos cargados del CSV -->
    <table id="csvTable" border="1" style="width: 100%; border-collapse: collapse;">
        <thead>
            <tr id="tablaHeaders"></tr> <!-- Fila de encabezados que se actualiza dinámicamente -->
        </thead>
        <tbody id="csvTableBody"></tbody> <!-- Cuerpo de la tabla donde se inyectan las filas -->
    </table>

    <!-- Botón para volver al menú -->
    <br />
    <button onclick="volverMenu()">Volver al Menú</button> <!-- Redirige a la página de Entrenador -->

    <p id="currentTime"></p>

    <!-- Enlace al script que gestiona la lógica de la página -->
    <script src="script.js"></script>

    <script>
        let datosCSV = []; // Variable global para almacenar los datos CSV cargados

        // Función para cargar el archivo BasedatosClase.csv sin mostrar la tabla
        function mostrarTabla() {
            const archivoCSV = '/sample-data/BasedatosClase.csv'; // Ruta del archivo CSV
            const urlConCacheBusting = archivoCSV + "?t=" + new Date().getTime(); // Añadimos un timestamp para evitar caché

            // Usamos 'fetch' para obtener el archivo y leer su contenido
            fetch(urlConCacheBusting)
                .then(response => response.text()) // Extraemos el texto del archivo CSV
                .then(contenido => {
                    const lineas = contenido.split("\n"); // Separamos el contenido por líneas
                    datosCSV = []; // Reiniciamos los datos cargados

                    // Iteramos sobre las líneas para agregar cada dato a la variable 'datosCSV'
                    lineas.forEach((linea, index) => {
                        if (linea.trim() === "" || index === 0) return; // Saltamos líneas vacías y la primera (encabezado)

                        const columnas = linea.split(";"); // Separar cada línea en columnas usando el delimitador ';'
                        datosCSV.push(columnas); // Almacenamos las filas en la variable 'datosCSV'
                    });

                    // Si el archivo se cargó correctamente, no hacemos nada con la tabla, solo lo guardamos en datosCSV
                })
                .catch(error => {
                    alert("Hubo un problema al cargar el archivo BasedatosClase.csv.");
                });
        }

        // Función para filtrar y mostrar datos según el ID de Entrenador proporcionado
        function filtrarPorID() {
            const idBuscada = document.getElementById("searchID").value.trim(); // Obtener el valor ingresado por el usuario
            if (idBuscada === "") {
                alert("Por favor ingrese un ID de Entrenador para buscar.");
                return; // Si el campo está vacío, mostrar un mensaje y salir de la función
            }

            // Limpiar la tabla antes de mostrar los resultados filtrados
            const tablaBody = document.getElementById("csvTableBody");
            tablaBody.innerHTML = "";

            const tablaHeaders = document.getElementById("tablaHeaders");
            tablaHeaders.innerHTML = `
                                                <th>Num Clase</th>
                                                <th>ID Clase</th>
                                                <th>ID Entrenador</th>
                                                <th>Clase</th>
                                                <th>Fecha</th>
                                                <th>Horario</th>
                                                <th>Cupos</th>
                                                <th>Precio Clase</th>`; // Volver a configurar los encabezados

            let encontrado = false; // Variable de control para verificar si se encuentra algún resultado

            // Recorremos los datos y filtramos según el ID de Entrenador
            datosCSV.forEach((fila) => {
                if (fila[2] === idBuscada) { // Comprobamos si la columna ID Entrenador (índice 2) coincide con la búsqueda
                    const filaHTML = document.createElement("tr");

                    fila.forEach((columna) => {
                        const celda = document.createElement("td");
                        celda.textContent = columna.trim(); // Limpiamos los espacios antes de agregar
                        filaHTML.appendChild(celda); // Añadimos la celda a la fila
                    });

                    tablaBody.appendChild(filaHTML); // Agregamos la fila filtrada a la tabla
                    encontrado = true; // Indicamos que se ha encontrado un resultado
                }
            });

            // Si no se encontró ningún resultado, mostramos un mensaje al usuario
            if (!encontrado) {
                alert("No se encontraron resultados para el ID de Entrenador proporcionado.");
            }
        }

        // Función para guardar los datos de la tabla como un archivo CSV
        function guardarCSV() {
            let csvContent = "Num Clase;ID Clase;ID Entrenador;Clase;Fecha;Horario;Cupos;Precio Clase\n"; // Encabezados para el CSV

            // Generar el contenido del CSV con las filas almacenadas
            datosCSV.forEach(filaData => {
                csvContent += filaData.join(";") + "\n"; // Unir los datos de cada fila con el delimitador ';'
            });

            // Crear un archivo Blob y descargalo como un CSV
            const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
            const link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "Clases_guardadas.csv"; // El nombre del archivo descargado
            link.click(); // Inicia la descarga del archivo CSV
        }

        // Función para volver al menú principal, redirigiendo a la página Entrenador.razor
        function volverMenu() {
            window.location.href = "/Entrenador"; // Redirige a la ruta principal de la página Entrenador
        }
    </script>
</body>

</html>

