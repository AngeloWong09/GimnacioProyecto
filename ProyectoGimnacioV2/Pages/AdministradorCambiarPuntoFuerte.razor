@page "/AdministradorCambiarPuntoFuerte"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation

<h3>Cambiar Punto Fuerte</h3>

<EditForm Model="@cambiarPuntoFuerte" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="coach-id">ID del Entrenador</label>
        <InputText id="coach-id" class="form-control" @bind-Value="cambiarPuntoFuerte.CoachId" />
        <button type="button" class="btn btn-primary mt-2" @onclick="SearchCoach">Buscar Entrenador</button>
    </div>

    <div class="form-group">
        <label for="coach-name">Nombre del Entrenador</label>
        <InputText id="coach-name" class="form-control" @bind-Value="cambiarPuntoFuerte.CoachName" Disabled="true" />
    </div>

    <div class="form-group">
        <label for="current-strength">Punto Fuerte Actual</label>
        <InputText id="current-strength" class="form-control" @bind-Value="cambiarPuntoFuerte.CurrentStrength" Disabled="true" />
    </div>

    <div class="form-group">
        <label for="new-strength">Nuevo Punto Fuerte</label>
        <InputSelect id="new-strength" class="form-control" @bind-Value="cambiarPuntoFuerte.NewStrength">
            <option value="">Seleccione una opción</option>
            <option value="Zumba">Zumba</option>
            <option value="CardioDance">CardioDance</option>
            <option value="Funcionales">Funcionales</option>
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-success">Cambiar Punto Fuerte</button>
</EditForm>

@if (isSuccess)
{
    <div class="alert alert-success mt-3">
        <strong>¡Éxito!</strong> Los cambios fueron realizados correctamente.
    </div>
}

<!-- Botón para ir a la página Administrador -->
<button class="btn btn-secondary mt-3" @onclick="GoToAdministrador">Ir a Administrador</button>

@code {
    private CambiarPuntoFuerteViewModel cambiarPuntoFuerte = new CambiarPuntoFuerteViewModel();
    private bool isSuccess = false;

    private async Task HandleValidSubmit()
    {
        // Lógica para actualizar el punto fuerte del entrenador
        // Puedes guardar estos datos en una base de datos o procesarlos de alguna manera

        // Simulando un éxito en el proceso
        isSuccess = true;
    }

    private void SearchCoach()
    {
        // Simulación de búsqueda de entrenador por ID (se debería conectar a la base de datos)
        if (cambiarPuntoFuerte.CoachId == "0")
        {
            cambiarPuntoFuerte.CoachName = "Entrenador Ejemplo";
            cambiarPuntoFuerte.CurrentStrength = "Zumba";
        }
        else
        {
            cambiarPuntoFuerte.CoachName = string.Empty;
            cambiarPuntoFuerte.CurrentStrength = string.Empty;
            isSuccess = false;
        }
    }

    private void GoToAdministrador()
    {
        // Redirige al componente Administrador
        Navigation.NavigateTo("/Administrador");
    }

    public class CambiarPuntoFuerteViewModel
    {
        [Required]
        public string CoachId { get; set; }

        public string CoachName { get; set; }

        public string CurrentStrength { get; set; }

        [Required]
        public string NewStrength { get; set; }
    }
}


