
@page "/AdministradorControlInventario"
<!DOCTYPE html>
<html>
<head>
    <title>Bienvenido a GYM FAST FORCE!</title>
    <link rel="stylesheet" href="styles.css" />
</head>
<body>
    <h1 class="title">Bienvenido a GYM FAST FORCE</h1>

    <h2>Mostrar Archivo CSV</h2>
    <div>
        <!-- Eliminamos el input para seleccionar archivo -->
        <button onclick="mostrarTabla()">Mostrar Tabla</button>
    </div>
    <br />

    <!-- Botón para guardar el CSV -->
    <div>
        <button onclick="guardarCSV()">Guardar Tabla como CSV</button>
    </div>
    <br />

    <h2>Editar Datos CSV</h2>
    <p>Haz clic en los campos de la tabla para editar.</p>

    <!-- Tabla donde se mostrarán los datos -->
    <table id="csvTable" border="1" style="width: 100%; border-collapse: collapse;">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Fecha Entrada</th>
                <th>Tiempo Vida (días)</th>
                <th>Ingresos</th>
                <th>Clase ID</th>
                <th>ID</th>
                <th>Acciones</th> <!-- Columna para botones Editar/Guardar -->
            </tr>
        </thead>
        <tbody id="csvTableBody"></tbody>
    </table>

    <p id="currentTime"></p>
    <script src="script.js"></script>

    <script>
        let datosCSV = []; // Para almacenar los datos del CSV

        // Función para cargar y mostrar el archivo Maquinas.csv
        function mostrarTabla() {
            // Usamos fetch para obtener el archivo Maquinas.csv desde el servidor
            fetch('sample-data/Maquinas.csv')
                .then(response => response.text())
                .then(contenido => {
                    const lineas = contenido.split("\n");
                    const tablaBody = document.getElementById("csvTableBody");
                    tablaBody.innerHTML = ""; // Limpiar la tabla
                    datosCSV = []; // Reiniciar los datos del CSV

                    // Iterar sobre las líneas del CSV
                    lineas.forEach((linea, index) => {
                        if (linea.trim() === "" || index === 0) return; // Ignorar líneas vacías o la primera línea (encabezado)

                        const columnas = linea.split(","); // Separar por comas, ya que la estructura es separada por comas

                        // Añadir los datos al array
                        datosCSV.push(columnas);

                        const fila = document.createElement("tr");

                        columnas.forEach((columna) => {
                            const celda = document.createElement("td");

                            // Hacer las celdas editables
                            celda.contentEditable = true;
                            celda.textContent = columna.trim();
                            fila.appendChild(celda);
                        });

                        const celdaAcciones = document.createElement("td");
                        const botonGuardar = document.createElement("button");
                        botonGuardar.textContent = "Guardar";
                        botonGuardar.onclick = function () { guardarCambios(fila, columnas); };
                        celdaAcciones.appendChild(botonGuardar);
                        fila.appendChild(celdaAcciones);

                        tablaBody.appendChild(fila);
                    });
                })
                .catch(error => {
                    alert("Hubo un problema al cargar el archivo Maquinas.csv.");
                });
        }

        // Función para guardar los cambios en una fila
        function guardarCambios(fila, columnas) {
            const celdas = fila.querySelectorAll("td");

            // Guardar los valores de las celdas editadas en el array
            for (let i = 0; i < celdas.length - 1; i++) { // Excluir la última celda de "acciones"
                columnas[i] = celdas[i].textContent.trim();
            }

            alert("Cambios guardados.");

            // Actualizar los datos en el array
            const filaIndex = datosCSV.findIndex((item) => item[5] === columnas[5]); // Usar el "ID" para encontrar la fila correcta
            if (filaIndex > -1) {
                datosCSV[filaIndex] = columnas; // Actualiza los datos
            }
        }

        // Función para guardar los datos de la tabla como archivo CSV
        function guardarCSV() {
            let csvContent = "Nombre,FechaEntrada,TiempoVida,Ingresos,Clase ID,ID\n"; // Añadimos los encabezados nuevamente

            // Generar CSV a partir de los datos almacenados
            datosCSV.forEach(filaData => {
                csvContent += filaData.join(",") + "\n"; // Separar por coma
            });

            // Crear un archivo blob y descargarlo
            const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
            const link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "Maquinas_guardadas.csv";
            link.click();
        }
    </script>
</body>
</html>

