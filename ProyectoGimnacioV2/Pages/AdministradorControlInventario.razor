
@page "/AdministradorControlInventario"
@inject NavigationManager Navigation
@using ProyectoGimnacioV2.Clases

<h3>Control de Inventario</h3>

<div class="form-group">
    <label for="machine-id">Busca ID de Máquina</label>
    <InputText id="machine-id" class="form-control" @bind-Value="machineId" />
    <button type="button" class="btn btn-primary mt-2" @onclick="SearchMachine">Buscar Máquina</button>
</div>

@if (machineFound)
{
    <table class="table table-bordered mt-3">
        <thead>
            <tr>
                <th>Nombre de la Máquina</th>
                <th>Cliente Asignado</th>
                <th>Día Establecido</th>
                <th>Hora Establecida</th>
                <th>Fecha de Compra</th>
                <th>Vida Útil (Meses)</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@machineName</td>
                <td>@clientName</td>
                <td>@establishedDay</td>
                <td>@establishedTime</td>
                <td>@purchaseDate.ToShortDateString()</td>
                <td>@lifeSpanMonths</td>
            </tr>
        </tbody>
    </table>

    @if (showWarning)
    {
        <div class="alert alert-warning mt-3">
            <strong>¡Atención!</strong> La máquina debe ser cambiada.
        </div>
    }
}

<!-- Botón para regresar a Administrador -->
<button class="btn btn-secondary mt-3" @onclick="GoToAdministrador">Ir a Administrador</button>

@code {
    private string machineId;
    private bool machineFound = false;
    private bool showWarning = false;
    private string machineName;
    private string clientName;
    private string establishedDay;
    private string establishedTime;
    private DateTime purchaseDate;
    private int lifeSpanMonths;

    private void SearchMachine()
    {
        // Obtener la lista de máquinas desde Maquinas.cs
        var maquinas = Maquinas.ObtenerMaquinas();

        // Buscar la máquina por ID
        var maquina = maquinas.FirstOrDefault(m => m.Id.ToString() == machineId);

        if (maquina != null)
        {
            // Si se encuentra la máquina, mostrar sus datos
            machineFound = true;
            showWarning = false;

            // Asignar los valores de la máquina encontrada a las variables
            machineName = maquina.Nombre;
            clientName = "Cliente A"; // O asignar el cliente correspondiente según tu lógica
            establishedDay = "Lunes"; // O asignar el día correspondiente según tu lógica
            establishedTime = "9:00 a.m - 10:00 a.m"; // O asignar la hora correspondiente según tu lógica
            purchaseDate = DateTime.Parse(maquina.FechaEntrada); // Convertir la fecha de entrada
            lifeSpanMonths = maquina.TiempoVida;

            // Calcular la fecha límite (30 de diciembre del año actual)
            var currentYear = DateTime.Now.Year;
            var targetDate = new DateTime(currentYear, 12, 30);

            // Verificar la diferencia de meses entre la fecha de entrada y el 30 de diciembre
            var monthsRemaining = ((targetDate.Year - purchaseDate.Year) * 12 + targetDate.Month - purchaseDate.Month);

            // Si faltan 3 meses o menos, mostrar la alerta
            if (monthsRemaining <= 3)
            {
                showWarning = true; // Mostrar la alerta si faltan 3 meses o menos
            }
        }
        else
        {
            // Si no se encuentra la máquina
            machineFound = false;
            showWarning = false;
        }
    }

    private void GoToAdministrador()
    {
        // Navega a la página Administrador
        Navigation.NavigateTo("/Administrador");
    }
}
