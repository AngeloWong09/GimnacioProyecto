
@page "/AdministradorReporte"
@inject NavigationManager Navigation
@using System.IO
@using ProyectoGimnacioV2.Clases

<h3>Generar Reportes</h3>

<div class="form-group">
    <label for="report-type">Seleccione el tipo de reporte:</label>
    <select id="report-type" class="form-control" @bind="selectedReportType">
        <option>Clases</option>
        <option>Máquinas</option>
    </select>
</div>

<button class="btn btn-primary mt-3" @onclick="SearchReport">Buscar</button>

@if (showReport)
{
    <table class="table table-bordered mt-3">
        <thead>
            @if (selectedReportType == "Clases")
            {
                <tr>
                    <th>Nombre de la Clase</th>
                    <th>Nombre del Entrenador</th>
                    <th>Punto Fuerte</th>
                    <th>Clientes Inscritos</th>
                </tr>
            }
            else if (selectedReportType == "Máquinas")
            {
                <tr>
                    <th>Nombre de la Máquina</th>
                    <th>Fecha de Entrada</th>
                    <th>Vida Útil</th>
                    <th>Ingresos</th>
                </tr>
            }
        </thead>
        <tbody>
            @foreach (var row in reportData)
            {
                <tr>
                    @foreach (var cell in row)
                    {
                        <td>@cell</td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-success mt-3" @onclick="SaveReport">Guardar Reporte</button>
}

<!-- Botón para regresar a Administrador -->
<button class="btn btn-secondary mt-3" @onclick="GoToAdministrador">Ir a Administrador</button>

@code {
    private string selectedReportType;
    private bool showReport = false;
    private List<List<string>> reportData = new List<List<string>>();

    private void SearchReport()
    {
        showReport = true;
        reportData.Clear();

        if (selectedReportType == "Clases")
        {
            var allClasses = ClaseEntrenamiento.ObtenerClases();

            // No se filtra por día ni hora, se muestran todas las clases
            foreach (var clase in allClasses)
            {
                reportData.Add(new List<string>
                {
                    clase.NombreClase,
                    clase.NombreEntrenador,
                    clase.Hora, // Puedes agregar más detalles si es necesario
                    clase.Capacidad.ToString() // Por ejemplo, el número de clientes inscritos
                });
            }
        }
        else if (selectedReportType == "Máquinas")
        {
            var allMachines = Maquinas.ObtenerMaquinas();

            foreach (var maquina in allMachines)
            {
                reportData.Add(new List<string>
                {
                    maquina.Nombre,
                    maquina.FechaEntrada,
                    maquina.TiempoVida.ToString(),
                    maquina.Ingresos.ToString()
                });
            }
        }
    }

    private void SaveReport()
    {
        string downloadsFolder = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), "Downloads");
        string fileName = "Reporte.csv";
        string filePath = Path.Combine(downloadsFolder, fileName);

        using (var writer = new StreamWriter(filePath))
        {
            // Escribir encabezado según el tipo de reporte
            if (selectedReportType == "Clases")
            {
                writer.WriteLine("Nombre de la Clase,Nombre del Entrenador,Punto Fuerte,Clientes Inscritos");
            }
            else if (selectedReportType == "Máquinas")
            {
                writer.WriteLine("Nombre de la Máquina,Fecha de Entrada,Vida Útil,Ingresos");
            }

            // Escribir los datos del reporte
            foreach (var row in reportData)
            {
                writer.WriteLine(string.Join(",", row));
            }
        }

        Console.WriteLine($"Reporte guardado en: {filePath}");
        // Proporcionar un enlace para descargar el archivo CSV
        var url = new Uri($"file:///{filePath}");
        Navigation.NavigateTo(url.AbsoluteUri);
    }

    private void GoToAdministrador()
    {
        // Navega a la página Administrador
        Navigation.NavigateTo("/Administrador");
    }
}
