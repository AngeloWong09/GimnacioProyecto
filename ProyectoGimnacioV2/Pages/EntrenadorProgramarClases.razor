
@page "/EntrenadorProgramarClases"

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Clases - GYM FAST FORCE</title>
    <link rel="stylesheet" href="styles.css" />
    <style>
        /* Estilos para los botones y campos de texto */
        .add-class-form {
            background-color: #f4f4f9;
            padding: 10px;
            border-radius: 5px;
            margin: 20px 0;
        }

            .add-class-form input {
                padding: 5px;
                margin: 5px;
                border-radius: 3px;
                width: 180px;
            }

            .add-class-form button {
                padding: 5px 15px;
                background-color: #4CAF50;
                color: white;
                border: none;
                border-radius: 3px;
                cursor: pointer;
            }

                .add-class-form button:hover {
                    background-color: #45a049;
                }

        table {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1 class="title">Gestión de Clases - GYM FAST FORCE</h1>

    <!-- Formulario para agregar una nueva clase -->
    <h2>Agregar Nueva Clase</h2>
    <div class="add-class-form">
        <label for="idEntrenador">ID Entrenador:</label>
        <input type="text" id="idEntrenador" placeholder="ID Entrenador"><br>

        <label for="clase">Clase:</label>
        <input type="text" id="clase" placeholder="Clase"><br>

        <label for="fecha">Fecha:</label>
        <input type="date" id="fecha" placeholder="Fecha"><br>

        <label for="horario">Horario:</label>
        <input type="text" id="horario" placeholder="Horario"><br>

        <label for="precio">Precio Clase:</label>
        <input type="text" id="precio" placeholder="Precio Clase"><br>

        <button onclick="agregarNuevaClase()">Agregar Clase</button>
    </div>

    <!-- Botón para ver Clases desde CSV -->
    <h2>Ver Clases desde CSV</h2>
    <div>
        <button onclick="cargarClasesCSV()">Cargar Clases</button> <!-- Botón para cargar el archivo CSV -->
        <button onclick="guardarCSV()">Guardar Tabla como CSV</button> <!-- Botón para guardar la tabla como CSV -->
    </div>
    <br />

    <!-- Tabla donde se mostrarán los datos -->
    <h2>Editar Clases</h2>
    <p>Solo puedes editar las columnas "Fecha" y "Horario".</p>
    <table id="csvTable" border="1" style="width: 100%; border-collapse: collapse;">
        <thead>
            <tr>
                <th>Num Clase</th>
                <th>ID Clase</th>
                <th>ID Entrenador</th>
                <th>Clase</th>
                <th>Fecha</th>
                <th>Horario</th>
                <th>Cupos</th>
                <th>Precio Clase</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="csvTableBody"></tbody>
    </table>

    <script>
        let datosCSV = [];
        let encabezadoCSV = "Num Clase;ID Clase;ID Entrenador;Clase;Fecha;Horario;Cupos;Precio Clase\n";

        // Función para cargar y mostrar el archivo Clases.csv
        function cargarClasesCSV() {
            fetch('sample-data/Clases.csv')
                .then(response => response.text())
                .then(contenido => {
                    const lineas = contenido.split("\n");
                    const tablaBody = document.getElementById("csvTableBody");
                    tablaBody.innerHTML = ""; // Limpiar la tabla previa
                    datosCSV = []; // Reiniciar datos

                    // Ignorar la primera línea (encabezados) al cargar los datos
                    lineas.slice(1).forEach(linea => {
                        if (linea.trim() === "") return;

                        const columnas = linea.split(";");
                        if (columnas.length === 8) { // Validar estructura esperada
                            datosCSV.push(columnas);

                            const fila = document.createElement("tr");

                            columnas.forEach((columna, index) => {
                                const celda = document.createElement("td");
                                // Solo permitir edición en Fecha (4) y Horario (5)
                                if (index === 4 || index === 5) {
                                    celda.contentEditable = true;
                                    celda.style.backgroundColor = "#e6f7ff"; // Destacar columnas editables
                                }
                                celda.textContent = columna.trim();
                                fila.appendChild(celda);
                            });

                            // Agregar botón "Guardar" a cada fila
                            const celdaAcciones = document.createElement("td");
                            const botonGuardar = document.createElement("button");
                            botonGuardar.textContent = "Guardar";
                            botonGuardar.onclick = function () { guardarCambios(fila, columnas); };
                            celdaAcciones.appendChild(botonGuardar);
                            fila.appendChild(celdaAcciones);

                            tablaBody.appendChild(fila);
                        }
                    });
                })
                .catch(error => {
                    alert("Hubo un problema al cargar el archivo Clases.csv.");
                });
        }

        // Agregar una nueva clase
        function agregarNuevaClase() {
            const idEntrenador = document.getElementById("idEntrenador").value;
            const clase = document.getElementById("clase").value;
            const fecha = document.getElementById("fecha").value;
            const horario = document.getElementById("horario").value;
            const precio = document.getElementById("precio").value;

            if (idEntrenador && clase && fecha && horario && precio) {
                const numClase = Math.floor(Math.random() * 100) + 1; // Número de clase aleatorio (entre 1 y 100)
                const idClase = Math.floor(Math.random() * 1000000) + 497670; // Generar un ID Clase aleatorio
                const cupos = 10; // Siempre 10 cupos

                // Estructura de la nueva clase siguiendo el formato especificado
                const nuevaClase = [
                    numClase.toString(),
                    idClase.toString(),
                    idEntrenador,
                    clase,
                    fecha,
                    horario,
                    cupos.toString(),
                    precio
                ];

                // Añadir la clase al arreglo de datos
                datosCSV.push(nuevaClase);
                actualizarTabla();
                alert("Clase agregada correctamente.");
            } else {
                alert("Por favor complete todos los campos.");
            }
        }

        // Función para actualizar la tabla después de agregar una nueva clase
        function actualizarTabla() {
            const tablaBody = document.getElementById("csvTableBody");
            tablaBody.innerHTML = ""; // Limpiar la tabla

            // Mostrar todos los datos actuales
            datosCSV.forEach((fila) => {
                const filaElemento = document.createElement("tr");

                fila.forEach((columna, index) => {
                    const celda = document.createElement("td");
                    celda.textContent = columna.trim();
                    filaElemento.appendChild(celda);
                });

                // Agregar botón "Guardar" a cada fila
                const celdaAcciones = document.createElement("td");
                const botonGuardar = document.createElement("button");
                botonGuardar.textContent = "Guardar";
                botonGuardar.onclick = function () { guardarCambios(filaElemento, fila); };
                celdaAcciones.appendChild(botonGuardar);
                filaElemento.appendChild(celdaAcciones);

                tablaBody.appendChild(filaElemento);
            });
        }

        // Guardar cambios en la fila
        function guardarCambios(fila, columnas) {
            const celdas = fila.querySelectorAll("td");
            columnas[4] = celdas[4].textContent.trim(); // Actualizar "Fecha"
            columnas[5] = celdas[5].textContent.trim(); // Actualizar "Horario"

            const filaIndex = datosCSV.findIndex(item => item[1] === columnas[1]); // Buscar por ID Clase
            if (filaIndex > -1) {
                datosCSV[filaIndex] = columnas;
            }
            alert("Cambios guardados.");
        }

        // Guardar datos como CSV, incluyendo los encabezados
        function guardarCSV() {
            let csvContent = encabezadoCSV + datosCSV.map(fila => fila.join(";")).join("\n");
            const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
            const link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "clases_actualizadas.csv";
            link.click();
        }
    </script>
</body>
</html>

