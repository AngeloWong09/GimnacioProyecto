
@page "/EntrenadorAgregarRutina"
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rutinas de Clientes - GYM FAST FORCE</title>
    <link rel="stylesheet" href="styles.css" />
</head>
<body>
    <h1 class="title">Rutinas de Clientes - GYM FAST FORCE</h1>

    <h2>Opciones</h2>
    <div>
        <!-- Botón para cargar RutinaCliente.csv -->
        <button onclick="cargarDesdeArchivo()">Ver RutinaCliente.csv</button>
        <button onclick="guardarCSV()">Guardar Tabla como CSV</button>
    </div>
    <br />

    <h2>Editar Datos de Rutinas</h2>
    <p>Solo puedes editar las columnas "Rutina 1" y "Repeticiones".</p>

    <!-- Tabla para mostrar los datos CSV -->
    <table id="csvTable" border="1" style="width: 100%; border-collapse: collapse;">
        <thead>
            <tr>
                <th>Usuario</th>
                <th>Contraseña</th>
                <th>Nombre</th>
                <th>Apellidos</th>
                <th>ID</th>
                <th>Rutina 1</th>
                <th>Repeticiones</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="csvTableBody"></tbody>
    </table>

    <script>
        let datosCSV = []; // Aquí se almacenarán las filas del CSV

        // Cargar archivo predeterminado RutinaCliente.csv
        function cargarDesdeArchivo() {
            fetch('sample-data/RutinaCliente.csv')
                .then(response => response.text())
                .then(contenido => {
                    cargarDatosDesdeTexto(contenido);
                })
                .catch(error => {
                    alert("No se pudo cargar RutinaCliente.csv.");
                });
        }

        // Cargar datos desde texto CSV
        function cargarDatosDesdeTexto(contenido) {
            const lineas = contenido.split("\n");
            const tablaBody = document.getElementById("csvTableBody");

            tablaBody.innerHTML = ""; // Limpiar tabla
            datosCSV = []; // Reiniciar datos

            for (let linea of lineas) {
                if (linea.trim() === "") continue;

                const columnas = linea.split(";"); // Separar columnas por ";"
                if (columnas.length === 7) { // Validar que coincidan las columnas esperadas
                    datosCSV.push(columnas);

                    const fila = document.createElement("tr");

                    columnas.forEach((columna, index) => {
                        const celda = document.createElement("td");

                        // Solo permitir edición en "Rutina 1" (índice 5) y "Repeticiones" (índice 6)
                        if (index === 5 || index === 6) {
                            celda.contentEditable = true;
                            celda.style.backgroundColor = "#e6f7ff"; // Destacar como editable
                        }

                        celda.textContent = columna.trim();
                        fila.appendChild(celda);
                    });

                    // Botón Guardar
                    const celdaAcciones = document.createElement("td");
                    const botonGuardar = document.createElement("button");
                    botonGuardar.textContent = "Guardar";
                    botonGuardar.onclick = function () { guardarCambios(fila, columnas); };
                    celdaAcciones.appendChild(botonGuardar);
                    fila.appendChild(celdaAcciones);

                    tablaBody.appendChild(fila);
                }
            }
        }

        // Guardar cambios en datosCSV
        function guardarCambios(fila, columnas) {
            const celdas = fila.querySelectorAll("td");

            // Actualizar solo las columnas 5 (Rutina 1) y 6 (Repeticiones)
            columnas[5] = celdas[5].textContent.trim();
            columnas[6] = celdas[6].textContent.trim();

            // Encontrar y actualizar en datosCSV
            const filaIndex = datosCSV.findIndex((item) => item[4] === columnas[4]); // Buscar por ID
            if (filaIndex > -1) {
                datosCSV[filaIndex] = columnas;
            }

            alert("Cambios guardados correctamente.");
        }

        // Guardar datos CSV como archivo
        function guardarCSV() {
            let csvContent = datosCSV.map(fila => fila.join(";")).join("\n");

            const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
            const link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "RutinaCliente_Actualizada.csv";
            link.click();
        }
    </script>
</body>
</html>
